# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ~~ USER ~~

#	Get all users
GET		/user/all				controllers.UserController.getAllUsers

#	Get specific user by ID
GET		/user					controllers.UserController.getUserById(uid: Long)

#	Get specific user by email
GET		/user/email				controllers.UserController.getUserByEmail(email)

#	Add user
POST	/user/create			controllers.UserController.createUser()

#	Update user account information
POST	/user/:id/update		controllers.UserController.updateUserInformation(id: Long)

#	Authenticate user
POST	/user/authenticate		controllers.UserController.authenticateUser()

POST	/user/updateProfile		controllers.UserController.updateProfile()

GET 	/user/:id/profile		controllers.UserController.getProfile(id: Long)

# ~~ MESSAGES ~~

POST	/message/send			controllers.MessageController.sendMessage()

GET		/message/:id			controllers.MessageController.getMessages(id: Long)

GET 	/message/:id/new		controllers.MessageController.getNewMeta(id: Long)

GET 	/message/:id/all		controllers.MessageController.getAllMeta(id: Long)

GET		/message/:receiver/:sender	controllers.MessageController.getMessagesFromSpecificUser(receiver: Long, sender: Long)

GET		/message/:receiver/:sender/new	controllers.MessageController.getNewMessages(receiver: Long, sender: Long)

#  ~~ RESTAURANT ~~

#	Finds restaurants for creating event
GET		/restaurants/find/location=:location						controllers.RestuarantController.findEventRestaurants(location:String)

#	Get restaurants by nearby search method
#GET		/restaurants/nearbysearch/location=:lat,:lng&radie=:rdi		controllers.RestuarantController.getRestaurantsNearby(lat:Double, lng:Double, rdi:Int)

#	Get restaurants by searching on location name
#GET		/restaurants/textsearch/query=:location				controllers.RestuarantController.getRestaurantsByText(location:String)

#	fetches specific restaurant through search on id
#GET		/restaurants/fetch/byid=:id						controllers.RestuarantController.getRestaurantById(id:String)

#	fetches specific restaurant through search on id
#GET		/restaurants/fetch/byname=:name					controllers.RestuarantController.getRestaurantByName(name:String)




#	~~ EVENT ~~

# 	Create new event with supplied restaurants
POST	/event/create								controllers.EventController.createEventWithRestaurants()

#	find match
GET		/event/match/:eid							controllers.EventController.findMatch(eid: Long)

#	Creates new Event
#POST	/event/create/								controllers.EventController.createEvent()

#	Gets all stored Events
GET		/event/all									controllers.EventController.getAllEvents()

#	Find match
GET 	/event/:uid/match							controllers.EventController.findMatch(uid: Long)

#	Gets specific Event from eventId presented
GET		/event/:evid								controllers.EventController.getEventById(evid:Long)

#	Gets matches for this user id
#GET 	/event/match/id=:uid						controllers.EventController.findMatch(uid:Long)

#	Created a booked event from current user and choosen event id
POST	/event/booked/create						controllers.EventController.createBookedEvent()					

#	Get BookedEvent bt ID
#GET 	/event/booked/:bkid							controllers.EventController.getBookedEvent(bkid:Long)
